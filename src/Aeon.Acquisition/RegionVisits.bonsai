<?xml version="1.0" encoding="utf-8"?>
<WorkflowBuilder Version="2.7.0-alpha0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xmlns:rx="clr-namespace:Bonsai.Reactive;assembly=Bonsai.Core"
                 xmlns:scr="clr-namespace:Bonsai.Scripting;assembly=Bonsai.Scripting"
                 xmlns:aeon="clr-namespace:Aeon.Acquisition;assembly=Aeon.Acquisition"
                 xmlns:p1="clr-namespace:OpenCV.Net;assembly=OpenCV.Net"
                 xmlns="https://bonsai-rx.org/2018/workflow">
  <Description>Detects entries and exits from the specified region of interest.</Description>
  <Workflow>
    <Nodes>
      <Expression xsi:type="WorkflowInput">
        <Name>Source1</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="Name" Description="The name of the region of interest." />
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="StringProperty" />
      </Expression>
      <Expression xsi:type="WorkflowInput">
        <Name>Source2</Name>
      </Expression>
      <Expression xsi:type="ExternalizedMapping">
        <Property Name="Value" DisplayName="Regions" />
      </Expression>
      <Expression xsi:type="PropertySource" TypeArguments="aeon:RegionContainsPoint,p1:Point[][]">
        <MemberName>Regions</MemberName>
      </Expression>
      <Expression xsi:type="PropertyMapping">
        <PropertyMappings>
          <Property Name="Regions" />
        </PropertyMappings>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="aeon:RegionContainsPoint" />
      </Expression>
      <Expression xsi:type="rx:DistinctUntilChangedBy">
        <rx:KeySelector>Value</rx:KeySelector>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:Skip">
          <rx:Count>1</rx:Count>
        </Combinator>
      </Expression>
      <Expression xsi:type="Combinator">
        <Combinator xsi:type="rx:WithLatestFrom" />
      </Expression>
      <Expression xsi:type="scr:ExpressionTransform">
        <scr:Expression>new(
Item1.Seconds as Seconds,
Item1.Value ? "Enter" : "Exit" as Event,
Item2 as Region,
0 as SubjectID)</scr:Expression>
      </Expression>
      <Expression xsi:type="WorkflowOutput" />
    </Nodes>
    <Edges>
      <Edge From="0" To="7" Label="Source1" />
      <Edge From="1" To="2" Label="Source1" />
      <Edge From="2" To="10" Label="Source2" />
      <Edge From="3" To="5" Label="Source1" />
      <Edge From="4" To="5" Label="Source2" />
      <Edge From="5" To="6" Label="Source1" />
      <Edge From="6" To="7" Label="Source2" />
      <Edge From="7" To="8" Label="Source1" />
      <Edge From="8" To="9" Label="Source1" />
      <Edge From="9" To="10" Label="Source1" />
      <Edge From="10" To="11" Label="Source1" />
      <Edge From="11" To="12" Label="Source1" />
    </Edges>
  </Workflow>
</WorkflowBuilder>