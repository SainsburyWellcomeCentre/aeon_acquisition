# =======================================================================================================================================================================
# Aeon.Acquisition CI/CD
# =======================================================================================================================================================================
# Index:
# * Build, test, and package .NET
# * Publish packages to GitHub
# * Publish packages to NuGet.org
# =======================================================================================================================================================================
# Note that this is a generic workflow meant for all Bonsai packages. Minor local modifications are fine, see https://github.com/bonsai-rx/prefect for more information.
# =======================================================================================================================================================================
name: Aeon.Acquisition
on:
  push:
    # This prevents tag pushes from triggering this workflow
    branches: ['**']
  pull_request:
  release:
    types: [published]
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  ContinuousIntegrationBuild: true
jobs:
  # =====================================================================================================================================================================
  # Build, test, and package .NET
  #  ___      _ _    _     _          _                    _                 _                     _  _ ___ _____
  # | _ )_  _(_) |__| |   | |_ ___ __| |_     __ _ _ _  __| |  _ __  __ _ __| |____ _ __ _ ___    | \| | __|_   _|
  # | _ \ || | | / _` |_  |  _/ -_|_-<  _|_  / _` | ' \/ _` | | '_ \/ _` / _| / / _` / _` / -_)  _| .` | _|  | |
  # |___/\_,_|_|_\__,_( )  \__\___/__/\__( ) \__,_|_||_\__,_| | .__/\__,_\__|_\_\__,_\__, \___| (_)_|\_|___| |_|
  #                   |/                 |/                   |_|                    |___/
  # =====================================================================================================================================================================
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: Windows x64
            os: windows-latest
            rid: win-x64
          - name: Linux x64
            os: ubuntu-22.04
            rid: linux-x64
            test-filter: --filter TestCategory!=DriverDependent
        configuration: ['debug', 'release']
        include:
          - platform:
              rid: win-x64
            configuration: release
            collect-packages: true
    name: ${{matrix.platform.name}} ${{matrix.configuration}}
    runs-on: ${{matrix.platform.os}}
    outputs:
      need-workflow-image-render: ${{steps.configure-build.outputs.need-workflow-image-render}}
    steps:
      # ----------------------------------------------------------------------- Checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # ----------------------------------------------------------------------- Set up tools
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      # ----------------------------------------------------------------------- Configure build
      - name: Configure build
        id: configure-build
        uses: bonsai-rx/configure-build@v1

      # ----------------------------------------------------------------------- Build
      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration ${{matrix.configuration}}

      # ----------------------------------------------------------------------- Pack
      - name: Pack
        id: pack
        run: dotnet pack --no-restore --no-build --configuration ${{matrix.configuration}}

      # ----------------------------------------------------------------------- Test
      - name: Test .NET Framework 4.7.2
        run: dotnet test --no-restore --no-build --configuration ${{matrix.configuration}} --verbosity normal --framework net472 ${{ matrix.platform.test-filter }}

      # ----------------------------------------------------------------------- Collect artifacts
      - name: Collect NuGet packages
        uses: actions/upload-artifact@v4
        if: matrix.collect-packages && steps.pack.outcome == 'success' && always()
        with:
          name: Packages
          if-no-files-found: error
          path: artifacts/package/${{matrix.configuration}}/**

  # =====================================================================================================================================================================
  # Publish packages to GitHub
  #  ___      _    _ _    _                    _                      _          ___ _ _   _  _      _
  # | _ \_  _| |__| (_)__| |_    _ __  __ _ __| |____ _ __ _ ___ ___ | |_ ___   / __(_) |_| || |_  _| |__
  # |  _/ || | '_ \ | (_-< ' \  | '_ \/ _` / _| / / _` / _` / -_|_-< |  _/ _ \ | (_ | |  _| __ | || | '_ \
  # |_|  \_,_|_.__/_|_/__/_||_| | .__/\__,_\__|_\_\__,_\__, \___/__/  \__\___/  \___|_|\__|_||_|\_,_|_.__/
  #                             |_|                    |___/
  # =====================================================================================================================================================================
  publish-github:
    name: Publish packages to GitHub
    runs-on: ubuntu-latest
    needs: build
    permissions:
      # Needed to attach files to releases
      contents: write
      # Needed to upload to GitHub Packages
      packages: write
    if: github.event_name == 'push' || github.event_name == 'release'
    steps:
      # ----------------------------------------------------------------------- Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      # ----------------------------------------------------------------------- Download built packages
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: artifacts/packages/

      # ----------------------------------------------------------------------- Upload release assets
      - name: Upload release assets
        if: github.event_name == 'release'
        run: gh release upload --repo ${{github.repository}} ${{github.event.release.tag_name}} artifacts/packages/* --clobber
        env:
          GH_TOKEN: ${{github.token}}

      # ----------------------------------------------------------------------- Push to GitHub Packages
      - name: Push to GitHub Packages
        run: dotnet nuget push "artifacts/packages/*.nupkg" --skip-duplicate --no-symbols --api-key ${{secrets.GITHUB_TOKEN}} --source https://nuget.pkg.github.com/${{github.repository_owner}}
        env:
          # This is a workaround for https://github.com/NuGet/Home/issues/9775
          DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: 0

  # =====================================================================================================================================================================
  # Publish packages to NuGet.org
  #  ___      _    _ _    _                    _                      _         _  _       ___     _
  # | _ \_  _| |__| (_)__| |_    _ __  __ _ __| |____ _ __ _ ___ ___ | |_ ___  | \| |_  _ / __|___| |_   ___ _ _ __ _
  # |  _/ || | '_ \ | (_-< ' \  | '_ \/ _` / _| / / _` / _` / -_|_-< |  _/ _ \ | .` | || | (_ / -_)  _|_/ _ \ '_/ _` |
  # |_|  \_,_|_.__/_|_/__/_||_| | .__/\__,_\__|_\_\__,_\__, \___/__/  \__\___/ |_|\_|\_,_|\___\___|\__(_)___/_| \__, |
  #                             |_|                    |___/                                                    |___/
  # =====================================================================================================================================================================
  publish-packages-nuget-org:
    name: Publish packages to NuGet.org
    runs-on: ubuntu-latest
    environment: public-release
    needs: build
    if: github.event_name == 'release'
    steps:
      # ----------------------------------------------------------------------- Set up .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      # ----------------------------------------------------------------------- Download built packages
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: Packages
          path: artifacts/packages/

      # ----------------------------------------------------------------------- Push to NuGet.org
      - name: Push to NuGet.org
        run: dotnet nuget push "artifacts/packages/*.nupkg" --api-key ${{secrets.NUGET_API_KEY}} --source ${{vars.NUGET_API_URL}}
        env:
          # This is a workaround for https://github.com/NuGet/Home/issues/9775
          DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER: 0
